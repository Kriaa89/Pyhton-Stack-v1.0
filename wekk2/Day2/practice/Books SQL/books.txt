SELECT * FROM books_schema.users;

-- Query: Create 5 different users: Jane Amsden, Emily Dixon, Theodore Dostoevsky, William Shapiro, Lao Xiu --

INSERT INTO books_schema.users(first_name, last_name, created_at, updated_at) 
VALUES('Jane', 'Amsden', NOW(), NOW()), 
('Emily', 'Dixon', NOW(), NOW()),
('Theodore', 'Dostoevsky', NOW(), NOW()),
('William', 'Shapiro', NOW(), NOW()),
('Lao', 'Lao Xiu ', NOW(), NOW());


-- Query: Create 5 books with the following names: C Sharp, Java, Python, PHP, Ruby --
INSERT INTO books_schema.books(title, num_of_pages, created_at, updated_at) 
VALUES('C Sharp', '20', NOW(), NOW()), 
('Java', '25', NOW(), NOW()),
('Python', '55', NOW(), NOW()),
('PHP', '60', NOW(), NOW()),
('Ruby', '100', NOW(), NOW());

-- Query: Change the name of the C Sharp book to C#--
UPDATE books_schema.books
SET title = 'C#'
WHERE title = 'C Sharp';
-- Query: Change the first name of the 4th user to Bill --
UPDATE books_schema.users
SET first_name = 'Bill'
WHERE first_name = 'William';


-- Query: Have the first user favorite the first 2 books -- 
INSERT INTO books_schema.favorits (user_id, book_id) VALUES(1,1), (1,2);
-- Query: Have the second user favorite the first 3 books -- 
INSERT INTO books_schema.favorits (user_id, book_id) VALUES(2,1), (2,2), (2,3);
-- Query: Have the third user favorite the first 4 books --
INSERT INTO books_schema.favorits (user_id, book_id) VALUES(3,1), (3,2), (3,3), (3,4);

-- Query: Have the fourth user favorite all the books --
INSERT INTO books_schema.favorits (user_id, book_id) VALUES(4,1), (4,2), (4,3), (4,4), (4,5);

-- Query: Retrieve all the users who favorited the 3rd book --
SELECT users.*
FROM users
JOIN favorits ON users.id = favorits.user_id
WHERE favorits.book_id =3;
--- Query: Remove the first user of the 3rd books favorite --
DELETE FROM favorits WHERE user_id = 1 AND book_id = 3;

-- Query: Have the 5th user favorite the 2nd book -- 
INSERT INTO books_schema.favorits (user_id, book_id) VALUES (5, 2);

-- Find all the books that the 3rd user favorited --
SELECT books.*
FROM books
JOIN favorits ON books.id = favorits.book_id
WHERE favorits.user_id = 3;
-- Query: Find all the users that favorited to the 5th book --
SELECT users.*
FROM users
JOIN favorits ON users.id = favorits.user_id
WHERE favorits.book_id = 5;




